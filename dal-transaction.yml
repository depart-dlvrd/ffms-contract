openapi: 3.0.3
info:
  title: OpenAPI definition
  version: v0.1
servers:
  - url: http://localhost:8082
    description: Generated server url
paths:
  /api/v1/autotransport/transaction/quotes:
    get:
      tags:
        - quote-handler
      operationId: getQuotes
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Quote"
    post:
      tags:
        - quote-handler
      operationId: createQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quote"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
    put:
      tags:
        - quote-handler
      operationId: updateQuote
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Quote"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
  /api/v1/autotransport/transaction/quotes/{quoteId}:
    get:
      tags:
        - quote-handler
      operationId: getQuote
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
  /api/v1/autotransport/transaction/quotes/{quoteId}/rates:
    get:
      tags:
        - quote-handler
      operationId: getQuoteRates
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/quotes/{quoteId}/rates/{shipmentId}:
    get:
      tags:
        - quote-handler
      operationId: getQuoteShipmentRates
      parameters:
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: shipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/quotes/customer/{customerId}:
    get:
      tags:
        - customer-quotes-handler
      operationId: getCustomerQuotes
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Quote"
  /api/v1/autotransport/transaction/quotes/customer/{customerId}/quote/{quoteId}:
    get:
      tags:
        - customer-quote-handler
      operationId: getCustomerQuote
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Quote"
  /api/v1/autotransport/transaction/quotes/customer/{customerId}/quote/{quoteId}/rates:
    get:
      tags:
        - customer-quote-rates-handler
      operationId: getCustomerQuoteRates
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/quotes/customer/{customerId}/quote/{quoteId}/rates/{shipmentId}:
    get:
      tags:
        - customer-quoteShipmentRate-handler
      operationId: getCustomerQuoteShipmentRates
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: quoteId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: shipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/orders:
    get:
      tags:
        - order-handler
      operationId: getOrders
      responses:
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
    post:
      tags:
        - order-handler
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
    put:
      tags:
        - order-handler
      operationId: updateOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /api/v1/autotransport/transaction/orders/{orderId}:
    get:
      tags:
        - order-handler
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /api/v1/autotransport/transaction/orders/{orderId}/rates:
    get:
      tags:
        - order-handler
      operationId: getOrdersRates
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/orders/{orderId}/rates/{shipmentId}:
    get:
      tags:
        - order-handler
      operationId: getOrderShipmentRates
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: shipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64

      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/orders/customer/{customerId}:
    get:
      tags:
        - customer-order-handler
      operationId: getCustomerOrders
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
  /api/v1/autotransport/transaction/orders/customer/{customerId}/order/{orderId}:
    get:
      tags:
        - customer-order-handler
      operationId: getCustomerOrder
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
  /api/v1/autotransport/transaction/orders/customer/{customerId}/order/{orderId}/rates:
    get:
      tags:
        - customer-order-handler
      operationId: getCustomerOrdersRates
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/orders/customer/{customerId}/order/{orderId}/rates/{shipmentId}:
    get:
      tags:
        - customer-order-handler
      operationId: getCustomerOrderShipmentRates
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: shipmentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/rates/:
    get:
      tags:
        - rate-handler
      operationId: getRates
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
    post:
      tags:
        - rate-handler
      operationId: createQuoteRates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ShipmentRate"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
    put:
      tags:
        - rate-handler
      operationId: updateQuoteRates
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ShipmentRate"
        required: true
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"
  /api/v1/autotransport/transaction/rates/vendor/{vendorId}/:
    get:
      tags:
        - vendor-rates-handler
      operationId: getVendorQuotes
      parameters:
        - name: vendorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "404":
          description: Not Found
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "500":
          description: Internal Server Error
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "403":
          description: Forbidden
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "401":
          description: Unauthorized
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "400":
          description: Bad Request
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/ResponseError"
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShipmentRate"

##############################
components:
  schemas:
    ResponseError:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        message:
          type: string
        errors:
          type: array
          items:
            type: string
        url:
          type: string
    Quote:
      type: object
      properties:
        quoteId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        shipments:
          type: array
          items:
            $ref: "#/components/schemas/QuoteShipment"
    QuoteShipment:
      type: object
      properties:
        quoteShipmentId:
          type: integer
          format: int64
        shipmentId:
          type: integer
        shipper:
          $ref: "#/components/schemas/QuoteAddress"
        consignee:
          $ref: "#/components/schemas/QuoteAddress"
        shipmentDetails:
          $ref: "#/components/schemas/ShipmentDetails"
        isInsured:
          type: boolean
        insurance:
          $ref: "#/components/schemas/Insurance"
    QuoteAddress:
      required: [ Country, postalZipCode, locationType ]
      type: object
      properties:
        quoteAddressId:
          type: integer
          format: int64
        country:
          type: string
        postalZipCode:
          type: string
        dateRange:
          type: string
        locationType:
          $ref: "#/components/schemas/LocationType"
        additionnalServices:
          type: array
          items:
            $ref: "#/components/schemas/ChargeType"
        coordinate:
          $ref: "#/components/schemas/Coordinate"
    Coordinate:
      required: [ coordinateName, longitude, latitude, radius ]
      type: object
      properties:
        coordinateId:
          type: integer
          format: int64
        coordinateName:
          type: string
          maxLength: 85
        location:
          type: string
        longitude:
          type: number
        latitude:
          type: number
        radius:
          type: number
        radiusUnit:
          $ref: "#/components/schemas/RadiusUnit"
        directions:
          type: array
          items:
            $ref: "#/components/schemas/Direction"
    Direction:
      type: string
      enum: [ ORG, DST ]
    RadiusUnit:
      type: string
      enum: [ KM, MI ]
    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        shipments:
          type: array
          items:
            $ref: "#/components/schemas/OrderShipment"
    OrderShipment:
      type: object
      properties:
        quoteShipmentId:
          type: integer
          format: int64
        shipmentId:
          type: integer
        shipper:
          $ref: "#/components/schemas/OrderAddress"
        consignee:
          $ref: "#/components/schemas/OrderAddress"
        shipmentDetails:
          $ref: "#/components/schemas/ShipmentDetails"
        isInsured:
          type: boolean
        insurance:
          $ref: "#/components/schemas/Insurance"
    OrderAddress:
      required:
        [ Country, postalZipCode, locationType, phone, extension, email, date ]
      type: object
      properties:
        orderAddressId:
          type: integer
          format: int64
        address:
          $ref: "#/components/schemas/Address"
        dateRange:
          type: string
        locationType:
          $ref: "#/components/schemas/LocationType"
        phone:
          type: string
          pattern: "^[0-9]{10}$"
        extension:
          type: string
          pattern: "^[0-9]{0,7}$"
        email:
          type: string
          maxLength: 255
        date:
          type: string
        time:
          type: string
        additionnalServices:
          type: array
          items:
            $ref: "#/components/schemas/ChargeType"
    ChargeType:
      type: string
      enum:
        - FL
        - LFT
        - INS
        - ASS
        - RES
        - CNS
        - ACC
        - HZM
        - HT
        - APD
        - RSH
        - APP
    Address:
      required: [ add, city, postalZipCode, provinceState, country ]
      type: object
      properties:
        addId:
          type: integer
          format: int64
        add:
          type: string
        add2:
          type: string
        city:
          type: string
        postalZipCode:
          type: string
        provinceState:
          type: string
        country:
          type: string
    ShipmentDetails:
      required: [ hazMat, docOnly, freezeProtect ]
      type: object
      properties:
        shipmentDetailsId:
          type: integer
          format: int64
        numberPieces:
          type: integer
        shipmentType:
          $ref: "#/components/schemas/ShipmentCategory"
        packaging:
          $ref: "#/components/schemas/Packaging"
        packageCaracteristic:
          type: array
          items:
            $ref: "#/components/schemas/PackageCaracteristic"
        isFreezeProtect:
          type: boolean
        isTempControl:
          type: boolean
        tempUnit:
          $ref: "#/components/schemas/Temperature"
        tempMin:
          type: integer
          format: int32
        tempMax:
          type: integer
          format: int32
        docOnly:
          type: boolean
    PackageCaracteristic:
      type: object
      properties:
        packageCaracteristicId:
          type: integer
          format: int64
        customPackages:
          type: string
        length:
          type: integer
          format: int32
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
        weight:
          type: number
        hsCode:
          type: string
          pattern: "^[0-9]{10}"
        nmfc:
          type: string
          pattern: "^[0-9]{6}"
        freightClass:
          type: string
          pattern: "^[0-9]{3}"
        freightSubClass:
          type: string
          pattern: "^[0-9]{1}"
        hazMat:
          $ref: "#/components/schemas/HazMat"
        emergencyTel:
          type: string
          maxLength: 10
          pattern: "^[0-9]{10}$"
        emergencyContact:
          type: string
          maxLength: 50
        numberPieces:
          type: number
        isHazMat:
          type: boolean
    Temperature:
      type: string
      enum:
        - F
        - C
    LocationType:
      type: string
      enum:
        - BUS
        - RES_APP
        - RES_HOU
        - OTR_JS
        - OTR_CC
        - OTR_OB
        - OTR_HTL
        - OTR_SHL
    Packaging:
      type: string
      enum:
        - BOX #Boxes
        - BAG #Bags
        - BAL #Bales
    ShipmentCategory:
      type: string
      enum:
        - LTR #letter
        - PCK #pack
        - PCL #parcel
        - SKD #Palet / skid
        - CRT #Crate
        - BDL #Bundle
        - RLL #Roll
        - FSD #Full truck palet
        - FFL #Full truck floor
    HazMat:
      type: object
      properties:
        hazmatId:
          type: integer
          format: int64
        hazmatClass:
          type: string
        hazmatSubClass:
          type: string
        un:
          type: string
        packageGroup:
          type: string
    Insurance:
      type: object
      properties:
        insuranceId:
          type: integer
          format: int64
        totalCostValue:
          type: number
        currency:
          type: string
        insuranceType:
          type: string
    ShipmentRate:
      type: object
      properties:
        shipmentRateId:
          type: integer
          format: int64
        vendorId:
          type: integer
          format: int64
        bidOrderCenterId:
          type: integer
          format: int64
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
        tripRates:
          type: array
          items:
            $ref: '#/components/schemas/TripRate'
    TripRate:
      type: object
      properties:
        tripRateId:
          type: integer
          format: int64
        pickupDateBeg:
          type: string
          format: date
        pickupDateEnd:
          type: string
          format: date
        arrivalDateBeg:
          type: string
          format: date
        arrivalDateEnd:
          type: string
          format: date
        transitDay:
          type: integer
        baseCharge:
          type: number
        surcharges:
          type: number
        price:
          type: number
        createdTimestamp:
          type: string
          format: date-time
        updateTimestamp:
          type: string
          format: date-time
        rateStatus:
          $ref: '#/components/schemas/RateStatus'
    QuoteRates:
      type: object
      properties:
        quoteRatesId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        quoteNumber: # Order identifier printed on the screen XXXXXXXXXXX so will be printed as Q-XXXXXXXXXXX
          type: integer
        quoteRates:
          type: array
          items:
            $ref: "#/components/schemas/QuoteRate"
    QuoteRate:
      type: object
      properties:
        quoteRateId:
          type: integer
          format: int64
        shipmentNumber: # shipment identifier printed on the screen XX so will get order number to make S-XXXXXXXXXXX-XX
          type: integer
        shipmentDetails:
          $ref: "#/components/schemas/ShipmentDetails"
        shipmentRates:
          type: array
          items:
            $ref: "#/components/schemas/ShipmentRate"
    OrderRates:
      type: object
      properties:
        orderRatesId:
          type: integer
          format: int64
        customerId:
          type: integer
          format: int64
        orderNumber: # Order identifier printed on the screen XXXXXXXXXXX so will be printed as O-XXXXXXXXXXX
          type: integer
        orderRates:
          type: array
          items:
            $ref: "#/components/schemas/OrderRate"
    OrderRate:
      type: object
      properties:
        orderRateId:
          type: integer
          format: int64
        shipmentNumber: # shipment identifier printed on the screen XX so will get order number to make S-XXXXXXXXXXX-XX
          type: integer
        shipmentDetails:
          $ref: "#/components/schemas/ShipmentDetails"
        shipmentRates:
          type: array
          items:
            $ref: "#/components/schemas/ShipmentRate"
    RateStatus:
      type: string
      enum:
        - ACCEPTED
        - REJECTED
        - BIDDED
        - EXPIRED